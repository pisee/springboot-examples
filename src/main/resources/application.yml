spring:
  application:
    name: springboot-examples
  resources:
    add-mappings: true
    
logging:
  level:
    root: INFO
    com.doni: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
server:
  port: 8080
  servlet:
    context-path: /

process:
  work:
    directory: cli
    script: test.bat
    
mybatis:  config-location: classpath:mybatis-config.xml
  
---

spring:
  profiles: mongodb
  data:    
    mongodb:      
      host: localhost      
      port: 27017      
      database: employee
      
---

spring:  
  profiles: mariadb
  datasource:    
    url: jdbc:mariadb://localhost:3306/dt    
    driver-class-name: org.mariadb.jdbc.Driver    
    username: dtuser    
    password: service
    
---

spring:  
  profiles: h2
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:~/data/springboot-examples-db;AUTO_SERVER=TRUE
    username: sa
    password: null
#    url: jdbc:h2:mem:testdb
#    username: sa
#    password: null
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database: H2
    generate-ddl: true  # spring.jpa.generate-ddl=true 서버 시작 시점에 DDL문을 생성하여 DB에 적용한다.
    hibernate:
      ddl-auto: update  #none: 아무것도 실행하지 않는다 (대부분의 DB에서 기본값이다)
                        #create-drop: SessionFactory가 시작될 때 drop및 생성을 실행하고, SessionFactory가 종료될 때 drop을 실행한다 (in-memory DB의 경우 기본값이다)
                        #create: SessionFactory가 시작될 때 데이터베이스 drop을 실행하고 생성된 DDL을 실행한다
                        #update: 변경된 스키마를 적용한다
                        #validate: 변경된 스키마가 있다면 변경점을 출력하고 애플리케이션을 종료한다
